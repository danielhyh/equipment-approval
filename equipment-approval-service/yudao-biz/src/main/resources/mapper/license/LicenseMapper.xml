<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.iocoder.yudao.module.biz.dal.mysql.license.LicenseMapper">


    <select id="page" resultType="cn.iocoder.yudao.module.biz.controller.admin.license.vo.LicensePageVO">
        SELECT
            c.id as app_id,
            a.id as original_id,
            b.id as duplicate_id,
            a.license_no,
            a.config_unit_name,
            a.license_device_name,
            a.ladder_config_model,
            d.region,
            a.issue_date AS original_issuance_date,
            b.duplicate_issue_date AS duplicate_issue_date,
            c.app_type as license_type,
            a.status
        from biz_license_original a
                 left join biz_license_duplicate b on a.id = b.original_id
                 left join biz_application c on a.application_id = c.id
                 left join biz_institution_ext d on c.institution_id = d.dept_id
        <where>
            <if test="p.licenseType != null and p.licenseType != ''">
                and c.app_type = #{p.licenseType}
            </if>
            <if test="p.deviceType != null and p.deviceType != ''">
                and a.license_device_name = #{p.deviceType}
            </if>
            <if test="p.ladderConfigModel != null and p.ladderConfigModel != ''">
                and a.ladder_config_model = #{p.ladderConfigModel}
            </if>
            <if test="p.region != null and p.region != ''">
                and d.region = #{p.region}
            </if>
            <if test="p.keywords != null and p.keywords != ''">
                and (
                    a.license_no like concat('%', #{p.keywords}, '%') or
                    a.config_unit_name like concat('%', #{p.keywords}, '%') or
                    a.license_device_name like concat('%', #{p.keywords}, '%') or
                )
            </if>
        </where>
    </select>


    <select id="getOriginalById" resultType="cn.iocoder.yudao.module.biz.controller.admin.license.vo.OriginalLicenseVO">
        SELECT
            config_unit_name,
            unified_social_credit_code,
            legal_person,
            license_device_name,
            ownership_nature,
            ladder_config_model,
            equipment_config_address,
            detailed_address,
            issuing_authority,
            issue_date
        from biz_license_original
        where id = #{id}
    </select>

    <select id="getDuplicateById" resultType="cn.iocoder.yudao.module.biz.controller.admin.license.vo.DuplicateLicenseVO">
        SELECT
            production_enterprise,
            specific_model,
            product_serial_no,
            installation_date,
            info_submit_date,
            duplicate_issuing_authority,
            duplicate_issue_date,
            remark
        FROM
            biz_license_duplicate
        where id = #{id}
    </select>
    <select id="licensePage"
            resultType="cn.iocoder.yudao.module.biz.controller.app.license.vo.AppLicensePageRespVO">
        select application_id,
               a.id as original_id,
               b.id as duplicate_id,
               a.license_no,
               a.issue_date,
               a.license_device_name,
               a.ladder_config_model,
               a.equipment_config_address,
               c.production_enterprise,
               c.specific_model,
               c.installation_date
        from biz_license_original a
        left join biz_license_duplicate b on a.id = b.original_id
        left join biz_application d on d.id = a.application_id
        left join biz_class_a_equipment c on d.equipment_id = c.id
        <where>
            and d.creator = #{userId}
            <if test="type != null and type != ''">
                and a.license_device_name = #{type}
            </if>
        </where>
    </select>

    <insert id="insertDuplicateLicense"
            parameterType="cn.iocoder.yudao.module.biz.controller.app.license.vo.AppDuplicateSubmitRequest"
           >
        INSERT INTO biz_license_duplicate (
            original_id,
            production_enterprise,
            info_submit_date,
            specific_model,
            duplicate_issuing_authority,
            product_serial_no,
            duplicate_issue_date,
            installation_date,
            remark,
            status,
            creator
        ) VALUES (
                        #{vo.originalId},
                        #{vo.productionEnterprise},
                        #{vo.infoSubmitDate},
                        #{vo.specificModel},
                        #{vo.duplicateIssuingAuthority},
                        #{vo.productSerialNo},
                        #{vo.duplicateIssueDate},
                        #{vo.installationDate},
                        #{vo.remark},
                        1,
                        #{creator}

                 )
    </insert>
</mapper>